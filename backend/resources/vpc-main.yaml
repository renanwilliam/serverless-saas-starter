Resources:
  VPC:
    Type: AWS::EC2::VPC
    Condition: CreateVPCResources
    Properties:
      CidrBlock: ${env:VPC_CIDR_PREFIX}.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-vpc-${self:provider.stage}"

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: true
      CidrBlock: ${env:VPC_CIDR_PREFIX}.0.0/19
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-public-a"

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: true
      CidrBlock: ${env:VPC_CIDR_PREFIX}.32.0/19
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-public-b"

  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1c
      MapPublicIpOnLaunch: true
      CidrBlock: ${env:VPC_CIDR_PREFIX}.64.0/20
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-public-c"

  PublicSubnetD:
    Type: AWS::EC2::Subnet
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1d
      MapPublicIpOnLaunch: true
      CidrBlock: ${env:VPC_CIDR_PREFIX}.80.0/20
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-public-d"

  PublicSubnetE:
    Type: AWS::EC2::Subnet
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1e
      MapPublicIpOnLaunch: true
      CidrBlock: ${env:VPC_CIDR_PREFIX}.96.0/20
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-public-e"

  PublicSubnetF:
    Type: AWS::EC2::Subnet
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1f
      MapPublicIpOnLaunch: true
      CidrBlock: ${env:VPC_CIDR_PREFIX}.112.0/20
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-public-f"

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      CidrBlock: ${env:VPC_CIDR_PREFIX}.128.0/19
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-private-a"

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1b
      CidrBlock: ${env:VPC_CIDR_PREFIX}.160.0/19
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-private-b"

  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1c
      CidrBlock: ${env:VPC_CIDR_PREFIX}.192.0/20
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-private-c"

  PrivateSubnetD:
    Type: AWS::EC2::Subnet
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1d
      CidrBlock: ${env:VPC_CIDR_PREFIX}.208.0/20
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-private-d"

  PrivateSubnetE:
    Type: AWS::EC2::Subnet
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1e
      CidrBlock: ${env:VPC_CIDR_PREFIX}.224.0/20
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-private-e"

  PrivateSubnetF:
    Type: AWS::EC2::Subnet
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1f
      CidrBlock: ${env:VPC_CIDR_PREFIX}.240.0/20
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-private-f"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Condition: CreateVPCResources
    Properties:
      Tags:
        - Key: "Name"
          Value: "${env:APP_NAME}-${self:provider.stage}-internet-gateway"

  VpcInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateVPCResources
    Properties:
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      GroupDescription: "Open Traffic"
      Tags:
        - Key: "Name"
          Value: "Open Traffic"